{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "AddDashmetaDashdataLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/tradingpost-job-production-add-meta-data",
        "RetentionInDays": 14
      }
    },
    "AddDashholidaysLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/tradingpost-job-production-add-holidays",
        "RetentionInDays": 14
      }
    },
    "AddDashsecurityDashpricingLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/tradingpost-job-production-add-security-pricing",
        "RetentionInDays": 14
      }
    },
    "AddDashmetaDashdataLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/tradingpost-job/production/1655171981420-2022-06-14T01:59:41.420Z/tradingpost-job.zip"
        },
        "Handler": "market-data/add-meta-data.run",
        "Runtime": "nodejs16.x",
        "FunctionName": "tradingpost-job-production-add-meta-data",
        "MemorySize": 1024,
        "Timeout": 600,
        "Description": "Ingests securities, exchanges, in the morning, in the evening it ingests stats, quotes, and closing pricing",
        "Tags": [
          {
            "Key": "service",
            "Value": "tradingpost-background-job"
          }
        ],
        "Role": "arn:aws:iam::670171407375:role/Basic-Lambda-Role",
        "VpcConfig": {
          "SecurityGroupIds": [
            "sg-0f6d411d350ce59d4"
          ],
          "SubnetIds": [
            "subnet-01fa64739811f141b",
            "subnet-04943437a165d812b",
            "subnet-0365b7b01827b2dfe"
          ]
        }
      },
      "DependsOn": [
        "AddDashmetaDashdataLogGroup"
      ]
    },
    "AddDashholidaysLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/tradingpost-job/production/1655171981420-2022-06-14T01:59:41.420Z/tradingpost-job.zip"
        },
        "Handler": "market-data/add-holidays.run",
        "Runtime": "nodejs16.x",
        "FunctionName": "tradingpost-job-production-add-holidays",
        "MemorySize": 1024,
        "Timeout": 300,
        "Description": "Ingests market holidays once a year",
        "Tags": [
          {
            "Key": "service",
            "Value": "tradingpost-background-job"
          }
        ],
        "Role": "arn:aws:iam::670171407375:role/Basic-Lambda-Role",
        "VpcConfig": {
          "SecurityGroupIds": [
            "sg-0f6d411d350ce59d4"
          ],
          "SubnetIds": [
            "subnet-01fa64739811f141b",
            "subnet-04943437a165d812b",
            "subnet-0365b7b01827b2dfe"
          ]
        }
      },
      "DependsOn": [
        "AddDashholidaysLogGroup"
      ]
    },
    "AddDashsecurityDashpricingLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/tradingpost-job/production/1655171981420-2022-06-14T01:59:41.420Z/tradingpost-job.zip"
        },
        "Handler": "market-data/add-security-prices.run",
        "Runtime": "nodejs16.x",
        "FunctionName": "tradingpost-job-production-add-security-pricing",
        "MemorySize": 1024,
        "Timeout": 120,
        "Description": "Ingests security prices",
        "Tags": [
          {
            "Key": "service",
            "Value": "tradingpost-background-job"
          }
        ],
        "Role": "arn:aws:iam::670171407375:role/Basic-Lambda-Role",
        "VpcConfig": {
          "SecurityGroupIds": [
            "sg-0f6d411d350ce59d4"
          ],
          "SubnetIds": [
            "subnet-01fa64739811f141b",
            "subnet-04943437a165d812b",
            "subnet-0365b7b01827b2dfe"
          ]
        }
      },
      "DependsOn": [
        "AddDashsecurityDashpricingLogGroup"
      ]
    },
    "AddDashmetaDashdataLambdaVersion9VWDevBnfrYw8guytxsWwdEOnpiUKSTZx7I25Uwcieg": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AddDashmetaDashdataLambdaFunction"
        },
        "CodeSha256": "6bJF4C7Y6tlfi1ktSiKMy53d9DQgg8HspHIHq3ZkIUE=",
        "Description": "Ingests securities, exchanges, in the morning, in the evening it ingests stats, quotes, and closing pricing"
      }
    },
    "AddDashholidaysLambdaVersion0P3be6sCCdLep4BvUYYCk4u3p5tjxdCF3Wlhl66NLM": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AddDashholidaysLambdaFunction"
        },
        "CodeSha256": "6bJF4C7Y6tlfi1ktSiKMy53d9DQgg8HspHIHq3ZkIUE=",
        "Description": "Ingests market holidays once a year"
      }
    },
    "AddDashsecurityDashpricingLambdaVersion7UtB7C9VUk2V3gTp3PO5exftwnxXXxHziWRsZJ9M": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AddDashsecurityDashpricingLambdaFunction"
        },
        "CodeSha256": "6bJF4C7Y6tlfi1ktSiKMy53d9DQgg8HspHIHq3ZkIUE=",
        "Description": "Ingests security prices"
      }
    },
    "AddDashmetaDashdataEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(20 20 ? * MON-FRI *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "AddDashmetaDashdataLambdaFunction",
                "Arn"
              ]
            },
            "Id": "add-meta-dataSchedule"
          }
        ]
      }
    },
    "AddDashmetaDashdataLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "AddDashmetaDashdataLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "AddDashmetaDashdataEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "AddDashmetaDashdataEventsRuleSchedule2": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(20 19 ? * MON-FRI *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "AddDashmetaDashdataLambdaFunction",
                "Arn"
              ]
            },
            "Id": "add-meta-dataSchedule"
          }
        ]
      }
    },
    "AddDashmetaDashdataLambdaPermissionEventsRuleSchedule2": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "AddDashmetaDashdataLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "AddDashmetaDashdataEventsRuleSchedule2",
            "Arn"
          ]
        }
      }
    },
    "AddDashmetaDashdataEventsRuleSchedule3": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(0 12 ? * MON-FRI *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "AddDashmetaDashdataLambdaFunction",
                "Arn"
              ]
            },
            "Id": "add-meta-dataSchedule"
          }
        ]
      }
    },
    "AddDashmetaDashdataLambdaPermissionEventsRuleSchedule3": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "AddDashmetaDashdataLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "AddDashmetaDashdataEventsRuleSchedule3",
            "Arn"
          ]
        }
      }
    },
    "AddDashmetaDashdataEventsRuleSchedule4": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(0 11 ? * MON-FRI *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "AddDashmetaDashdataLambdaFunction",
                "Arn"
              ]
            },
            "Id": "add-meta-dataSchedule"
          }
        ]
      }
    },
    "AddDashmetaDashdataLambdaPermissionEventsRuleSchedule4": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "AddDashmetaDashdataLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "AddDashmetaDashdataEventsRuleSchedule4",
            "Arn"
          ]
        }
      }
    },
    "AddDashholidaysEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(0 0 1 1 ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "AddDashholidaysLambdaFunction",
                "Arn"
              ]
            },
            "Id": "add-holidaysSchedule"
          }
        ]
      }
    },
    "AddDashholidaysLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "AddDashholidaysLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "AddDashholidaysEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "AddDashsecurityDashpricingEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(* 12-20 ? * MON-FRI *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "AddDashsecurityDashpricingLambdaFunction",
                "Arn"
              ]
            },
            "Id": "add-security-pricingSchedule"
          }
        ]
      }
    },
    "AddDashsecurityDashpricingLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "AddDashsecurityDashpricingLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "AddDashsecurityDashpricingEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-tradingpost-job-production-ServerlessDeploymentBucketName"
      }
    },
    "AddDashmetaDashdataLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AddDashmetaDashdataLambdaVersion9VWDevBnfrYw8guytxsWwdEOnpiUKSTZx7I25Uwcieg"
      },
      "Export": {
        "Name": "sls-tradingpost-job-production-AddDashmetaDashdataLambdaFunctionQualifiedArn"
      }
    },
    "AddDashholidaysLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AddDashholidaysLambdaVersion0P3be6sCCdLep4BvUYYCk4u3p5tjxdCF3Wlhl66NLM"
      },
      "Export": {
        "Name": "sls-tradingpost-job-production-AddDashholidaysLambdaFunctionQualifiedArn"
      }
    },
    "AddDashsecurityDashpricingLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AddDashsecurityDashpricingLambdaVersion7UtB7C9VUk2V3gTp3PO5exftwnxXXxHziWRsZJ9M"
      },
      "Export": {
        "Name": "sls-tradingpost-job-production-AddDashsecurityDashpricingLambdaFunctionQualifiedArn"
      }
    }
  }
}