service: tradingpost-job
app: tradingpost-app

frameworkVersion: '3'

plugins:
  - serverless-prune-plugin
  - serverless-esbuild

package:
  individually: true

custom:
  prune:
    automatic: true
    number: 1
  esbuild:
    platform: node
    target: 'node16'
    external:
      - '@sparticuz/chromium'
      - 'puppeteer-core'
    exclude:
      - pg-native

provider:
  stage: production
  name: aws
  architecture: x86_64
  environment:
    CONFIGURATION_ENV: production
    NODE_ENV: production
  tags:
    service: tradingpost-background-job
  runtime: nodejs16.x
  iam:
    role: arn:aws:iam::670171407375:role/Basic-Lambda-Role
  vpc:
    securityGroupIds:
      - sg-0f6d411d350ce59d4
    subnetIds:
      - subnet-01fa64739811f141b
      - subnet-04943437a165d812b
      - subnet-0365b7b01827b2dfe

functions:
  #  trades-notifications:
  #    handler: notifications/trades.handler
  #    description: Dispatches new trades notifications to users
  #    logRetentionInDays: 14
  #    timeout: 900
  #    memorySize: 1024
  collect-ibkr-trades:
    handler: brokerage/collect-ibkr-trades.handler
    description: Collects Ibkr Trades
    logRetentionInDays: 14
    timeout: 900
    memorySize: 1024
    events:
      - schedule:
          rate: cron(*/10 * ? * MON-FRI *) # Every 10 minutes
          enabled: true
  collect-trades:
    handler: brokerage/collect-trades.handler
    description: Collects Finicity Trades Daily
    logRetentionInDays: 14
    timeout: 900
    memorySize: 512
    events:
      - schedule:
          rate: cron(0 11 ? * MON-FRI *) # 5AM UTC
          enabled: true
  add-meta-data:
    handler: market-data/add-meta-data.run
    description: Ingests securities, exchanges, in the morning, in the evening it ingests stats, quotes, and closing pricing
    logRetentionInDays: 14
    timeout: 900
    memorySize: 1024
    reservedConcurrency: 1
    events:
      - schedule:
          rate: cron(20 20 ? * MON-FRI *) # 4:20 PM EDT
          enabled: true
      - schedule:
          rate: cron(20 19 ? * MON-FRI *) # 4:20 PM EST
          enabled: true
      - schedule:
          rate: cron(0 12 ? * MON-FRI *) # 8:00 AM EDT
          enabled: true
      - schedule:
          rate: cron(0 11 ? * MON-FRI *) # 8:00 AM EST
          enabled: true

  add-holidays:
    handler: market-data/add-holidays.run
    description: Ingests market holidays once a year
    logRetentionInDays: 14
    timeout: 300
    reservedConcurrency: 1
    memorySize: 1024
    events:
      - schedule:
          rate: cron(0 0 1 1 ? *)
          enabled: true

  intraday-pricing:
    handler: market-data/intraday-pricing.run
    description: Ingests intraday pricing
    logRetentionInDays: 14
    timeout: 600
    reservedConcurrency: 1
    memorySize: 1024
    events:
      - schedule:
          rate: cron(* 12-20 ? * MON-FRI *)
          enabled: true
      - schedule:
          rate: cron(2 20 ? * MON-FRI *)
          enabled: true

  eod-pricing:
    handler: market-data/eod-pricing.run
    description: Ingests pricing for securities after market close & allow for 15min delay to kick in
    logRetentionInDays: 14
    timeout: 600
    reservedConcurrency: 1
    memorySize: 1024
    events:
      - schedule:
          rate: cron(20 20 ? * MON-FRI *)
          enabled: true
      - schedule:
          rate: cron(20 19 ? * MON-FRI *)
          enabled: true

  security-pruning:
    handler: market-data/security-pruning.run
    description: Prunes security data
    reservedConcurrency: 1
    logRetentionInDays: 14
    timeout: 600
    memorySize: 1024
    events:
      - schedule:
          rate: cron(0 7 ? * MON-FRI *)
          enabled: true

  # ============== Social Media Lambdas ==============
  spotify:
    handler: social-media/spotify.run
    description: Ingests Spotify User Data
    logRetentionInDays: 14
    timeout: 600
    memorySize: 1024
    reservedConcurrency: 1
    events:
      - schedule:
          rate: cron(0 11 ? * MON-SUN *) # Run once a day at 7AM ET
          enabled: true
      - schedule:
          rate: cron(0 23 ? * MON-SUN *) # Run once a day at 7PM ET
          enabled: true

  substack:
    handler: social-media/substack.run
    description: Ingests Substack Data
    logRetentionInDays: 14
    timeout: 900
    memorySize: 1600
    reservedConcurrency: 1
    events:
      - schedule:
          rate: cron(0 11 ? * MON-SUN *) # Run once a day at 7AM ET
          enabled: true
      - schedule:
          rate: cron(0 23 ? * MON-SUN *) # Run once a day at 7PM ET
          enabled: true

  twitter:
    handler: social-media/twitter.run
    description: Ingests Twitter Data
    logRetentionInDays: 14
    timeout: 900
    memorySize: 1600
    reservedConcurrency: 1
    events:
      - schedule:
          rate: cron(*/10 * ? * MON-SUN *) # Run every 10 minutes every day
          enabled: true

  youtube:
    handler: social-media/youtube.run
    description: Ingests YouTube User Data
    logRetentionInDays: 14
    timeout: 600
    memorySize: 1024
    reservedConcurrency: 1
    events:
      - schedule:
          rate: cron(0 11 ? * MON-SUN *) # Run once a day at 7AM ET
          enabled: true
